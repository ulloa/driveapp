{>"layouts/master" /}

{<body}
    {>"layouts/navbar" /}
    <div id="map"></div>
    <script type="text/javascript">

     var citymap = {
	 kidzone: {
	     center: {A: {lat: 33.7215192, lng: -117.7717849},
		     B: {lat: 33.731192, lng: -117.7797849},
		     C: {lat: 34.731192, lng: -117.7797849}
		     },
	     prob: 27
	 },
	 accidents: {
	     center: {lat: 33.700000, lng: -117.80000},
	     prob: 84
	 },
	 theft: {
	     center: {lat: 34.052, lng: -118.243},
	     prob: 38
	 },
	 traffic: {
	     center: {lat: 49.25, lng: -123.1},
	     prob: 60
	 }
     };

     var poly;
     var map;
     function initMap() {
	 map = new google.maps.Map(document.getElementById('map'), {
	     center: {lat: 33.6694, lng: -117.8231},
	     zoom: 13,
	     mapTypeId: google.maps.MapTypeId.TERRAIN
	 });
	 var image = 'images/redflag.png';
	 var beachMarker = new google.maps.Marker({
	     position: {lat: 33.6694, lng: -117.8235},
	     map: map,
	     icon: image
	 });
/*
	 var kidZone = new google.maps.Marker({
	     position: citymap.kidzone.center,
	     map: map,
	     icon: 'images/TurtleIconA.png'
	 });
*/
	 var accidents = new google.maps.Marker({
	     position: citymap.accidents.center,
	     map: map,
	     icon: 'images/AlertIconA.png'
	 });

/* Note: We scale the area of the circle based on the population.*/
	 for (var city in citymap) {
	     /* Add the circle for this city to the map. */
	     /* looping */
	     if (city == 'kidzone') {
		 for (var location in citymap[city].center) {
		     console.log('test');
		     var kidZone = new google.maps.Marker({
			 position: citymap[city].center[location],
			 map: map,
			 icon: 'images/TurtleIconA.png'
		     });
		     var cityCircle = new google.maps.Circle({
			 strokeColor: '#FF0000',
			 strokeOpacity: 0.8,
			 strokeWeight: 2,
			 fillColor: '#FF0000',
			 fillOpacity: 0.35,
			 map: map,
			 center: citymap[city].center[location],
			 radius: Math.sqrt(citymap[city].prob) * 100
		     });
		 };
	     }
	     else {
		 var cityCircle = new google.maps.Circle({
		     strokeColor: '#FF0000',
		     strokeOpacity: 0.8,
		     strokeWeight: 2,
		     fillColor: '#FF0000',
		     fillOpacity: 0.35,
		     map: map,
		     center: citymap[city].center,
		     radius: Math.sqrt(citymap[city].prob) * 100
		 });
	     }
	 };

	 poly = new google.maps.Polyline({
	     strokeColor: '#000000',
	     strokeOpacity: 1.0,
	     strokeWeight: 3
	 });
	 poly.setMap(map);


	 map.addListener('click', addLatLng);
     }
/*     check for Geolocation support */
     if (navigator.geolocation) {
	 console.log('Geolocation is supported!');
     }
     else {
	 console.log('Geolocation is not supported for this Browser/OS version yet.');
     }
     
     window.onload = function() {
	 var startPos;
	 var geoSuccess = function(position) {
	     startPos = position;
	     document.getElementById('startLat').innerHTML = startPos.coords.latitude;
	     document.getElementById('startLon').innerHTML = startPos.coords.longitude;
	 };
	 var geoError = function(position) {
	     console.log('Error occurred. Error code: ' + error.code);
	 };

	 navigator.geolocation.getCurrentPosition(geoSuccess);
     };


     var marker = null;

     function autoUpdate() {
	 navigator.geolocation.getCurrentPosition(function(position) {  
	     var newPoint = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);

	     if (marker) {

		 marker.setPosition(newPoint);
	     }
	     else {

		 marker = new google.maps.Marker({
		     position: newPoint,
		     map: map
		 });
	     }

/*	     map.setCenter(newPoint); */
	 }); 

/*	  Call the autoUpdate() function every 5 seconds */
	 setTimeout(autoUpdate, 5000);


     }

     autoUpdate();
     

     function addLatLng(event) {
	 var path = poly.getPath();

	 /* Because path is an MVCArray, we can simply append a new coordinate*/
	 /* and it will automatically appear. */
	 path.push(event.latLng);

	 /* Add a new marker at the new plotted point on the polyline. */
	 var marker = new google.maps.Marker({
	     position: event.latLng,
	     title: '#' + path.getLength(),
	     map: map
	 });
     }
/* alert for entering radii*/
/*     google.maps.Map.addListener(map, 'click', function() {
	console.log('lfdkjalsdkfjj');
     });
*/

/*
     google.maps.event.addListener(map, 'center_changed', function(event) {
	 console.log('teslkajlkjda');
	 var currPos = new google.maps.LatLng(event.latLng.k, event.latLng.B);

	 var dist = getDistance(currPos, cityCircle.center);

	 if(dist < 10){
	     alert('Marker is inside');
	 }

     });
*/

    </script>
<!--    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB39Zaa4Hss57nNT9h5QXbRkLCG7uZKIbA&callback=initMap" />  -->
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDgqGHydf7ZIC0kheaZRvfr7g2cwM65S5w&callback=initMap" > </script>
{/body}
